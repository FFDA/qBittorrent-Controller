apply plugin: 'com.android.application'

configurations {
    all {
        exclude module: 'commons-logging'
    }
}


android {

    compileSdkVersion 33

    defaultConfig {
        applicationId 'com.lgallardo.qbittorrentclient'
        minSdk 23
        targetSdkVersion 33
        archivesBaseName = "qBittorrentClient_v" + versionName

        // Stops the Gradle pluginâ€™s automatic rasterization of vectors
        // Check https://medium.com/@chrisbanes/appcompat-v23-2-age-of-the-vectors-91cbafa87c88#.nja9kkcvj

//        generatedDensities = []

        vectorDrawables.useSupportLibrary = true
//        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
        }

        debug {debuggable true

            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
        }
    }

    flavorDimensions "default"

    productFlavors {
       pro {
            applicationId 'com.lgallardo.qbittorrentclientpro'
            versionName '4.9.2'
            minSdkVersion 23
            targetSdkVersion 31
           archivesBaseName = "qBittorrentController_v" + versionName
            versionCode 4920
            dimension "default"
        }
        free {
            applicationId "com.lgallardo.qbittorrentclient"
            versionName '4.9.2'
            minSdkVersion 23
            targetSdkVersion 31
            archivesBaseName = "qBittorrentController_v" + versionName
            versionCode 4920
            dimension "default"
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/DEPENDENCIES.txt', 'META-INF/dependencies.txt', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/LGPL2.1']
        }
    }

    installation {
        timeOutInMs 600000
    }
    lint {
        abortOnError false
    }
}
repositories {
    mavenCentral()
    google()
}

dependencies {

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.7.0'
//    implementation 'com.google.android.gms:play-services-ads:21.1.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.activity:activity:1.6.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'


//    dependencies {
//        implementation 'com.nbsp:library:1.08'
//    }


    // Robotium
    dependencies {
        implementation 'com.jayway.android.robotium:robotium-solo:5.4.1'
    }

}

tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.4.0'
            }
        }
    }
}
